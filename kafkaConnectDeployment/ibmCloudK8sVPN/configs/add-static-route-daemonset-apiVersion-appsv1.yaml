# Created by running 'kubectl convert -f ./add-static-route-daemonset.yaml --output-version apps/v1'
# More info: https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "0"
  creationTimestamp: null
  labels:
    name: add-static-route
  name: add-static-route
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: add-static-route
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: add-static-route
      name: add-static-route
    spec:
      containers:
      - args:
        - |
          _gateway=`ip route get 10.0.0.0/8 | sed 's/.*via \(.*\) dev.*/\1/'`; touch routes_${_lastVersion}.txt; while true; do
            _currVersion=`kubectl get configmap static-routes -o go-template --template '{{.metadata.resourceVersion}}'`
            if [ $? -ne 0 ]; then
              echo "Error getting configmap version, taking no action";
              sleep 15;
              continue;
            fi;
            if [ "${_lastVersion}" == "${_currVersion}" ]; then
              _lastVersion=${_currVersion};
              sleep 5;
              continue;
            fi;
            echo "Change detected to configmap (lastVersion=${_lastVersion}, currVersion=${_currVersion})!";
            kubectl get configmap static-routes -o go-template --template '{{.data.routes}}' | jq -r 'join("\n")' | sort | uniq > routes_${_currVersion}.txt;
            if [ "${PIPESTATUS[0]}" -ne 0 ]; then
              echo "Error getting configmap contents, taking no action";
              sleep 5;
              continue;
            fi;
            for _route in `comm -23 routes_${_lastVersion}.txt routes_${_currVersion}.txt`; do
              [ ! -z "`ip route show | grep ${_route} | grep ${_gateway}`" ] || continue;
              echo "Deleting ${_route} via ${_gateway} ...";
              ip route del ${_route} via ${_gateway};
            done;
            for _route in `comm -1 routes_${_lastVersion}.txt routes_${_currVersion}.txt | awk '{print $1;}'`; do
              [ -z "`ip route show | grep ${_route} | grep ${_gateway}`" ] || continue;
              echo "Adding ${_route} via ${_gateway} ...";
              ip route add ${_route} via ${_gateway};
            done;

            rm -f routes_${_lastVersion}.txt;
            _lastVersion=${_currVersion};
          done
        command:
        - /bin/bash
        - -c
        image: ibmcase/kubectl
        imagePullPolicy: Always
        name: add-static-route
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: add-static-routes
      serviceAccountName: add-static-routes
      terminationGracePeriodSeconds: 30
  updateStrategy:
    type: OnDelete
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
